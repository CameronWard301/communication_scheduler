{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.0",
    "title": "Communication Scheduler BFF API",
    "description": "Documentation automatically generated by the <b>swagger-autogen</b> module."
  },
  "servers": [
    {
      "url": "https://localhost:3000/v1/bff/"
    },
    {
      "url": "http://localhost:3000/v1/bff/"
    }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Authentication related end-points"
    },
    {
      "name": "Preferences",
      "description": "Preferences related end-points"
    }
  ],
  "paths": {
    "/v1/bff/auth": {
      "post": {
        "tags": [
          "Auth"
        ],
        "description": "Get the auth token with the required scopes.",
        "responses": {
          "200": {
            "description": "Generate an auth token with the required scopes",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthToken"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthScopes"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/AuthScopes"
              }
            }
          }
        }
      }
    },
    "/v1/bff/gateway": {
      "get": {
        "tags": [
          "Gateways"
        ],
        "description": "Get gateways.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Page Number to get",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page Size to get",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "friendlyName",
            "in": "query",
            "description": "Friendly name to filter results by",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endpointUrl",
            "in": "query",
            "description": "Endpoint url to filter results by",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "description",
            "in": "query",
            "description": "Description to filter results by",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "The field to sort by",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortDirection",
            "in": "query",
            "description": "Either asc or desc",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get the gateways from the server matching the filters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GatewayPage"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          }
        }
      },
      "post": {
        "tags": [
          "Gateways"
        ],
        "description": "Create gateway.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The created gateway from the server.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Gateway"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          }
        }
      },
      "put": {
        "tags": [
          "Gateways"
        ],
        "description": "Update gateway.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The updated gateway from the server.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Gateway"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not Found."
          }
        }
      }
    },
    "/v1/bff/gateway/{id}": {
      "get": {
        "tags": [
          "Gateways"
        ],
        "description": "Get gateways.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The found gateway from the server.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Gateway"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          }
        }
      },
      "delete": {
        "tags": [
          "Gateways"
        ],
        "description": "Delete gateway by id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Delete was successful."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not Found."
          }
        }
      }
    },
    "/v1/bff/gateway/{id}/schedule/count": {
      "get": {
        "tags": [
          "Gateways"
        ],
        "description": "Get the number of schedules that use this gateway.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The total matching the filter.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TotalMatches"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          }
        }
      }
    },
    "/v1/bff/history": {
      "get": {
        "tags": [
          "History"
        ],
        "description": "Get the history page.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "The number of items to return.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "The page number to return.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "The status to filter by, either 'Any Status', 'Completed', 'Running', 'Failed', 'Terminated', 'Cancelled', or 'Unknown'.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "gatewayId",
            "in": "query",
            "description": "The gateway ID to filter by.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "scheduleId",
            "in": "query",
            "description": "The schedule ID to filter by.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "in": "query",
            "description": "The user ID to filter by.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The history page.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientHistoryPage"
                }
              }
            }
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          }
        }
      }
    },
    "/v1/bff/history/stop/{workflowId}/{runId}": {
      "delete": {
        "tags": [
          "History"
        ],
        "description": "Stop the communication.",
        "parameters": [
          {
            "name": "workflowId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The workflow ID."
          },
          {
            "name": "runId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The run ID."
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found."
          }
        }
      }
    },
    "/v1/bff/preferences": {
      "get": {
        "tags": [
          "Preferences"
        ],
        "description": "Get preferences.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Generate the preferences from the server.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Preferences"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          }
        }
      },
      "put": {
        "tags": [
          "Preferences"
        ],
        "description": "Update preferences.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Update the preferences on the server.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Preferences"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Preferences"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Preferences"
              }
            }
          }
        }
      }
    },
    "/v1/bff/schedule": {
      "get": {
        "tags": [
          "Schedules"
        ],
        "description": "Get schedules.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Page Number to get",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page Size to get",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "gatewayId",
            "in": "query",
            "description": "Gateway ID to filter results by",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "scheduleId",
            "in": "query",
            "description": "Schedule ID to filter results by",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "in": "query",
            "description": "User ID to filter results by",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get the schedules from the server matching the filters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientSchedulePage"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          }
        }
      },
      "post": {
        "tags": [
          "Schedules"
        ],
        "description": "Create a schedule. Please provide one of interval, calendar, or cronExpression.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "The schedule to create",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ClientScheduleCreateRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The created schedule from the server.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientSchedule"
                }
              }
            }
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          }
        }
      },
      "put": {
        "tags": [
          "Schedules"
        ],
        "description": "Update a schedule.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "The schedule to update",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ClientScheduleEditRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The updated schedule from the server.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientScheduleCreateEdit"
                }
              }
            }
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not Found."
          }
        }
      },
      "patch": {
        "tags": [
          "Schedules"
        ],
        "description": "Bulk update schedules.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "scheduleIds",
            "in": "query",
            "description": "The JSON URL-ENCODED list of schedule IDs to update",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "selectionType",
            "in": "query",
            "description": "The type of selection to filter results by, either 'IDs' or 'QUERY'. If set to query one of userId, gatewayId or scheduleIds should be set",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "in": "query",
            "description": "The user ID to select schedules by if selectionType is set to query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "gatewayId",
            "in": "query",
            "description": "The gateway ID to select schedules by if selectionType is set to query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "The properties of the schedules to update, action type can be Pause, Resume, Delete or Gateway. If action type is Gateway, gatewayId is required.",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ClientBulkUpdateScheduleRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The updated schedules from the server.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BulkActionResult"
                }
              }
            }
          },
          "202": {
            "description": "Some schedules were updated but some failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BulkActionResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          }
        }
      }
    },
    "/v1/bff/schedule/review": {
      "get": {
        "tags": [
          "Schedules"
        ],
        "description": "Get schedules for bulk action.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Page Number to get",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page Size to get",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "gatewayId",
            "in": "query",
            "description": "Gateway ID to filter results by",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "scheduleId",
            "in": "query",
            "description": "Schedule ID to filter results by",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "in": "query",
            "description": "User ID to filter results by",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "scheduleIds",
            "in": "query",
            "description": "a JSON-URL-ENCODED list of schedule ids to filter results by",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "selectionType",
            "in": "query",
            "description": "The type of selection to filter results by, either 'IDs' or 'QUERY'",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get the schedules from the server matching the filters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientSchedulePage"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          }
        }
      }
    },
    "/v1/bff/schedule/{id}": {
      "get": {
        "tags": [
          "Schedules"
        ],
        "description": "Get a schedule by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The schedule from the server.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientSchedule"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not Found."
          }
        }
      },
      "delete": {
        "tags": [
          "Schedules"
        ],
        "description": "Delete a schedule by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Delete was successful."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not Found."
          }
        }
      }
    },
    "/v1/bff/schedule/{id}/pause": {
      "patch": {
        "tags": [
          "Schedules"
        ],
        "description": "Pause a schedule by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "The gateway name to be returned back in the same object",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/GatewayName"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Schedule was paused successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientScheduleCreateEdit"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not Found."
          }
        }
      }
    },
    "/v1/bff/schedule/{id}/resume": {
      "patch": {
        "tags": [
          "Schedules"
        ],
        "description": "Resume a schedule by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "description": "The gateway name to be returned back in the same object",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/GatewayName"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Schedule was resumed successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientScheduleCreateEdit"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not Found."
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AuthToken": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "example": "string"
          },
          "expires": {
            "type": "string",
            "example": "string"
          }
        },
        "xml": {
          "name": "AuthToken"
        }
      },
      "AuthScopes": {
        "type": "array",
        "example": [
          "GATEWAY:READ",
          "GATEWAY:WRITE"
        ],
        "items": {
          "type": "string"
        },
        "xml": {
          "name": "AuthScopes"
        }
      },
      "Gateway": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "string"
          },
          "endpointUrl": {
            "type": "string",
            "example": "https://example.com/email"
          },
          "friendlyName": {
            "type": "string",
            "example": "My Email Gateway"
          },
          "description": {
            "type": "string",
            "example": "This is a gateway for sending emails"
          },
          "dateCreated": {
            "type": "string",
            "example": "03/03/2024 16:45:12"
          }
        },
        "xml": {
          "name": "Gateway"
        }
      },
      "GatewayPage": {
        "type": "object",
        "properties": {
          "gateways": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "example": "string"
                },
                "endpointUrl": {
                  "type": "string",
                  "example": "https://example.com/email"
                },
                "friendlyName": {
                  "type": "string",
                  "example": "My Email Gateway"
                },
                "description": {
                  "type": "string",
                  "example": "This is a gateway for sending emails"
                },
                "dateCreated": {
                  "type": "string",
                  "example": "03/03/2024 16:45:12"
                }
              }
            }
          },
          "totalElements": {
            "type": "number",
            "example": 1
          },
          "pageSize": {
            "type": "number",
            "example": 5
          },
          "pageNumber": {
            "type": "number",
            "example": 0
          }
        },
        "xml": {
          "name": "GatewayPage"
        }
      },
      "TotalMatches": {
        "type": "object",
        "properties": {
          "total": {
            "type": "number",
            "example": 1
          }
        },
        "xml": {
          "name": "TotalMatches"
        }
      },
      "Preferences": {
        "type": "object",
        "properties": {
          "gatewayTimeoutSeconds": {
            "type": "number",
            "example": 100
          },
          "maximumAttempts": {
            "type": "number",
            "example": 200
          },
          "backoffCoefficient": {
            "type": "number",
            "example": 4
          },
          "initialInterval": {
            "type": "object",
            "properties": {
              "value": {
                "type": "number",
                "example": 1
              },
              "unit": {
                "type": "string",
                "example": "S"
              }
            }
          },
          "maximumInterval": {
            "type": "object",
            "properties": {
              "value": {
                "type": "number",
                "example": 100
              },
              "unit": {
                "type": "string",
                "example": "D"
              }
            }
          },
          "startToCloseTimeout": {
            "type": "object",
            "properties": {
              "value": {
                "type": "number",
                "example": 100
              },
              "unit": {
                "type": "string",
                "example": "H"
              }
            }
          }
        },
        "xml": {
          "name": "Preferences"
        }
      },
      "ClientSchedulePage": {
        "type": "object",
        "properties": {
          "schedules": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "example": "1234"
                },
                "status": {
                  "type": "string",
                  "example": "Paused"
                },
                "gatewayName": {
                  "type": "string",
                  "example": "myGateway"
                },
                "gatewayId": {
                  "type": "string",
                  "example": "1234"
                },
                "gateway": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "string"
                    },
                    "endpointUrl": {
                      "type": "string",
                      "example": "https://example.com/email"
                    },
                    "friendlyName": {
                      "type": "string",
                      "example": "My Email Gateway"
                    },
                    "description": {
                      "type": "string",
                      "example": "This is a gateway for sending emails"
                    },
                    "dateCreated": {
                      "type": "string",
                      "example": "03/03/2024 16:45:12"
                    }
                  }
                },
                "userId": {
                  "type": "string",
                  "example": "1234"
                },
                "nextRun": {
                  "type": "string",
                  "example": "03/03/2024 16:45:12"
                },
                "lastRun": {
                  "type": "string",
                  "example": "03/03/2024 16:45:12"
                }
              }
            }
          },
          "totalElements": {
            "type": "number",
            "example": 1
          },
          "pageSize": {
            "type": "number",
            "example": 25
          },
          "pageNumber": {
            "type": "number",
            "example": 0
          }
        },
        "xml": {
          "name": "ClientSchedulePage"
        }
      },
      "ClientScheduleCreateRequest": {
        "type": "object",
        "properties": {
          "gatewayId": {
            "type": "string",
            "example": "1234"
          },
          "userId": {
            "type": "string",
            "example": "54653"
          },
          "scheduleType": {
            "type": "string",
            "example": "Interval"
          },
          "intervalSpec": {
            "type": "object",
            "properties": {
              "days": {
                "type": "string",
                "example": "1"
              },
              "hours": {
                "type": "string",
                "example": "0"
              },
              "minutes": {
                "type": "string",
                "example": "0"
              },
              "seconds": {
                "type": "string",
                "example": "0"
              },
              "offset": {
                "type": "string",
                "example": "0"
              },
              "offsetPeriod": {
                "type": "string",
                "example": "S"
              }
            }
          },
          "calendarWeekSpec": {
            "type": "object",
            "properties": {
              "dayOfWeek": {
                "type": "string",
                "example": "Monday"
              },
              "hours": {
                "type": "string",
                "example": "0"
              },
              "minutes": {
                "type": "string",
                "example": "0"
              }
            }
          },
          "calendarMonthSpec": {
            "type": "object",
            "properties": {
              "dayOfMonth": {
                "type": "number",
                "example": 1
              },
              "month": {
                "type": "string",
                "example": "January"
              },
              "hours": {
                "type": "number",
                "example": 0
              },
              "minutes": {
                "type": "number",
                "example": 0
              }
            }
          },
          "cronSpec": {
            "type": "string",
            "example": "0 0 0 0 0"
          }
        },
        "required": [
          "gatewayId",
          "userId",
          "scheduleType"
        ],
        "xml": {
          "name": "ClientScheduleCreateRequest"
        }
      },
      "ClientScheduleEditRequest": {
        "type": "object",
        "properties": {
          "scheduleId": {
            "type": "string",
            "example": "1234"
          },
          "gatewayId": {
            "type": "string",
            "example": "1234"
          },
          "userId": {
            "type": "string",
            "example": "54653"
          },
          "scheduleType": {
            "type": "string",
            "example": "Interval"
          },
          "intervalSpec": {
            "type": "object",
            "properties": {
              "days": {
                "type": "string",
                "example": "1"
              },
              "hours": {
                "type": "string",
                "example": "0"
              },
              "minutes": {
                "type": "string",
                "example": "0"
              },
              "seconds": {
                "type": "string",
                "example": "0"
              },
              "offset": {
                "type": "string",
                "example": "0"
              },
              "offsetPeriod": {
                "type": "string",
                "example": "S"
              }
            }
          },
          "calendarWeekSpec": {
            "type": "object",
            "properties": {
              "dayOfWeek": {
                "type": "string",
                "example": "Monday"
              },
              "hours": {
                "type": "string",
                "example": "0"
              },
              "minutes": {
                "type": "string",
                "example": "0"
              }
            }
          },
          "calendarMonthSpec": {
            "type": "object",
            "properties": {
              "dayOfMonth": {
                "type": "number",
                "example": 1
              },
              "month": {
                "type": "string",
                "example": "January"
              },
              "hours": {
                "type": "number",
                "example": 0
              },
              "minutes": {
                "type": "number",
                "example": 0
              }
            }
          },
          "cronSpec": {
            "type": "string",
            "example": "0 0 0 0 0"
          }
        },
        "required": [
          "scheduleId"
        ],
        "xml": {
          "name": "ClientScheduleEditRequest"
        }
      },
      "ClientSchedule": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "1234"
          },
          "status": {
            "type": "string",
            "example": "Paused"
          },
          "gatewayName": {
            "type": "string",
            "example": "myGateway"
          },
          "gatewayId": {
            "type": "string",
            "example": "1234"
          },
          "gateway": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "example": "string"
              },
              "endpointUrl": {
                "type": "string",
                "example": "https://example.com/email"
              },
              "friendlyName": {
                "type": "string",
                "example": "My Email Gateway"
              },
              "description": {
                "type": "string",
                "example": "This is a gateway for sending emails"
              },
              "dateCreated": {
                "type": "string",
                "example": "03/03/2024 16:45:12"
              }
            }
          },
          "userId": {
            "type": "string",
            "example": "1234"
          },
          "nextRun": {
            "type": "string",
            "example": "03/03/2024 16:45:12"
          },
          "lastRun": {
            "type": "string",
            "example": "03/03/2024 16:45:12"
          }
        },
        "xml": {
          "name": "ClientSchedule"
        }
      },
      "ClientScheduleCreateEdit": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "1234"
          },
          "status": {
            "type": "string",
            "example": "Paused"
          },
          "gatewayName": {
            "type": "string",
            "example": "myGateway"
          },
          "gatewayId": {
            "type": "string",
            "example": "1234"
          },
          "userId": {
            "type": "string",
            "example": "1234"
          },
          "cronExpression": {
            "type": "string",
            "example": "0 0 0 0 0"
          },
          "interval": {
            "type": "object",
            "properties": {
              "days": {
                "type": "string",
                "example": "1"
              },
              "hours": {
                "type": "string",
                "example": "0"
              },
              "minutes": {
                "type": "string",
                "example": "0"
              },
              "seconds": {
                "type": "string",
                "example": "0"
              },
              "offset": {
                "type": "string",
                "example": "0"
              },
              "offsetPeriod": {
                "type": "string",
                "example": "S"
              }
            }
          },
          "calendar": {
            "type": "object",
            "properties": {
              "comment": {
                "type": "string",
                "example": ""
              },
              "seconds": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "start": {
                      "type": "string",
                      "example": "0"
                    },
                    "end": {
                      "type": "string",
                      "example": "0"
                    },
                    "step": {
                      "type": "string",
                      "example": "1"
                    }
                  }
                }
              },
              "minutes": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "start": {
                      "type": "string",
                      "example": "0"
                    },
                    "end": {
                      "type": "string",
                      "example": "0"
                    },
                    "step": {
                      "type": "string",
                      "example": "1"
                    }
                  }
                }
              },
              "hour": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "start": {
                      "type": "string",
                      "example": "0"
                    },
                    "end": {
                      "type": "string",
                      "example": "0"
                    },
                    "step": {
                      "type": "string",
                      "example": "1"
                    }
                  }
                }
              },
              "dayOfMonth": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "start": {
                      "type": "string",
                      "example": "0"
                    },
                    "end": {
                      "type": "string",
                      "example": "0"
                    },
                    "step": {
                      "type": "string",
                      "example": "1"
                    }
                  }
                }
              },
              "dayOfWeek": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "start": {
                      "type": "string",
                      "example": "0"
                    },
                    "end": {
                      "type": "string",
                      "example": "0"
                    },
                    "step": {
                      "type": "string",
                      "example": "1"
                    }
                  }
                }
              },
              "year": {
                "type": "array",
                "example": [],
                "items": {}
              }
            }
          },
          "nextRun": {
            "type": "string",
            "example": "03/03/2024 16:45:12"
          },
          "lastRun": {
            "type": "string",
            "example": "03/03/2024 16:45:12"
          }
        },
        "xml": {
          "name": "ClientScheduleCreateEdit"
        }
      },
      "ClientBulkUpdateScheduleRequest": {
        "type": "object",
        "properties": {
          "paused": {
            "type": "boolean",
            "example": false
          },
          "gatewayId": {
            "type": "string",
            "example": "1234"
          },
          "actionType": {
            "type": "string",
            "example": "Pause"
          }
        },
        "required": [
          "actionType"
        ],
        "xml": {
          "name": "ClientBulkUpdateScheduleRequest"
        }
      },
      "BulkActionResult": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "failureReasons": {
            "type": "array",
            "example": [],
            "items": {}
          },
          "totalModified": {
            "type": "number",
            "example": 10
          }
        },
        "xml": {
          "name": "BulkActionResult"
        }
      },
      "GatewayName": {
        "type": "object",
        "properties": {
          "friendlyName": {
            "type": "string",
            "example": "My Gateway Name"
          }
        },
        "xml": {
          "name": "GatewayName"
        }
      },
      "ClientHistoryPage": {
        "type": "object",
        "properties": {
          "historyItems": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "workflowId": {
                  "type": "string",
                  "example": "1234"
                },
                "id": {
                  "type": "string",
                  "example": "1234"
                },
                "userId": {
                  "type": "string",
                  "example": "1234"
                },
                "gatewayId": {
                  "type": "string",
                  "example": "1234"
                },
                "gatewayName": {
                  "type": "string",
                  "example": "My Gateway"
                },
                "scheduleId": {
                  "type": "string",
                  "example": "1234"
                },
                "status": {
                  "type": "string",
                  "example": "Running"
                },
                "startTime": {
                  "type": "string",
                  "example": "03/03/2024 16:45:12"
                },
                "endTime": {
                  "type": "string",
                  "example": "03/03/2024 16:45:12"
                }
              }
            }
          },
          "totalElements": {
            "type": "number",
            "example": 1
          },
          "pageSize": {
            "type": "number",
            "example": 25
          },
          "pageNumber": {
            "type": "number",
            "example": 0
          }
        },
        "xml": {
          "name": "ClientHistoryPage"
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}