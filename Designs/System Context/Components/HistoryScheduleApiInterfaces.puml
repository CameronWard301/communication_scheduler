@startuml Component Interfaces

component webportalBFFApi {

}

component temporal {
}

() workflowClient
() scheduleClient
() workflowServiceStubs


workflowServiceStubs <|-u- temporal
workflowClient <|-u- temporal
scheduleClient <|-u- temporal

package "Communication APIs" as communicationApis {

    component scheduleApi{

    }

    interface scheduleController{
        + Schedule createSchedule(String endpointUrl, String userId, CalendarSpec calendarSpec, boolean paused)
        + Schedule updateSchedule(Schedule schedule)
        + List<Schedule> getSchedules(Optional<int> pageNumber, Optional<int> pageSize)
        + List<Schedule> getSchedules(Optional<int> pageNumber, Optional<int> pageSize)
        + void deleteScheduleById(String id)
        + Schedule schedule getScheduleById(String id)
        + List<Schedule> getSchedulesByGatewayId(String gatewayId, Optional<int> pageNumber, Optional<int> pageSize)
        + List<Schedule> updateSchedulesByGatewayId(String gatewayId, Schedule schedule)
        + void deleteSchedulesByGatewayId(String gatewayId)
        + List<Schedule> getSchedulesByUserId(String userId)
        + List<Schedule> updateSchedulesByUserId(String userId, Schedule schedule)
        + void deleteSchedulesByUserId(String userId)
    }

    interface scheduleService {
        + Schedule createSchedule(String endpointUrl, String userId, CalendarSpec calendarSpec, boolean paused)
        + Schedule updateSchedule(String id, String endpointUrl, String userId, CalendarSpec calendarSpec, boolean paused)
        + List<Schedule> getSchedules(int pageNumber, int pageSize)
        + void deleteScheduleById(String id)
        + Schedule schedule getScheduleById(String id)
        + List<Schedule> getSchedulesByGatewayId(String gatewayId, int pageNumber, int pageSize)
        + void deleteSchedulesByGatewayId(String gatewayId)
        + List<Schedule> updateSchedulesByGatewayId(String gatewayId, String endpointUrl, String userId, CalendarSpec calendarSpec, boolean paused)
        + List<Schedule> getSchedulesByUserId(String userId)
        + void deleteSchedulesByUserId(String userId)
        + List<Schedule> updateSchedulesByUserId(String userId, String endpointUrl, String userId, CalendarSpec calendarSpec, boolean paused)
    }


    scheduleApi --|> scheduleService : Realises
    scheduleApi --|> scheduleController : Realises
    scheduleController --> scheduleService : Uses

    component historyApi {

    }

    interface historyController {
        + List<CommunicationWorkflow> getWorkflows(Optional<String> userId, Optional<String> gatewayId, Optional<int> status, Optional<int> PageNumber, Optional<int> pageSize)
        + int getWorkflowNumber(Optional<String> userId, Optional<String> gatewayId, Optional<int> status)
        + CommunicationWorkflow getWorkflowById(String id)
    }


    interface historyService {
        + List<CommunicationWorkflow> getWorkflows(Optional<String> userId, Optional<String> gatewayId, int status, int PageNumber, int pageSize)
        + int getWorkflowNumber(Optional<String> userId, Optional<String> gatewayId, int status)
        + CommunicationWorkflow getWorkflowById(String id)
    }

    historyApi --|> historyService
    historyApi --|> historyController
    historyController --> historyService
    
}


webportalBFFApi ---> historyController
webportalBFFApi ---> scheduleController
scheduleClient <-- scheduleApi
workflowClient <-- historyApi
@enduml