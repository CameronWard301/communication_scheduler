@startuml WorkflowClassDiagram

interface WorkflowInterface {
}

interface ActivityInterface {
}

note top of WorkflowInterface
    Interface from Temporal SDK
end note

note top of ActivityInterface
    Interface from Temporal SDK
end note


interface CommunicationWorkflow extends WorkflowInterface {
    + Map<String, String> sendCommunication(Map<String, String> payload)
}

class CommunicationWorkflowImpl implements CommunicationWorkflow{
    - String taskQueue
    - GetPreferencesActivity getSettingsActivity
    + Map<String, String> sendCommunication(Map<String, String> payload)

}

interface GetPreferencesActivity extends ActivityInterface{
    + Preferences getPreferences()
}

class GetPreferencesActivityImpl implements GetPreferencesActivity {
    - KubernetesClient client
    - TemporalProperties temporalProperties
    - ObjectMapper objectMapper
    + Preferences getPreferences
}


interface GetGatewayFromDbActivity extends ActivityInterface{
    + String getGatewayEndpointURL(String gatewayId)
}

class GetGatewayFromDbActivityImpl implements GetGatewayFromDbActivity{
    - GatewayRepository gatewayRepository
    + String getGatewayEndpointURL(String gatewayId)
}

interface SendMessageToGatewayActivity extends ActivityInterface {
    + Map<String, String> invokeGateway(String userId, String workflowRunId, String gatewayUrl, Preferences preferences)
}

class SendMessageToGatewayActivityImpl implements SendMessageToGatewayActivity {
    - {static} String HEADER_KEY
    - WebClient webClient
    - String apiKey
    + SendMessageToGatewayActivityImpl(WebClient webClient, String apiKey)
    + Map<String, String> invokeGateway(String userId, String workflowRunId, String gatewayUrl, Preferences preferences)
}



@enduml