@startuml Gateway Interfaces



package "Communication Gateway" as communicationGateway {
    component gateway {

    }


    class HashHelper {
        + String messageHash(String workflowRunId, String messageContents)
    }

    interface CommunicationHistoryAccessProvider {
        + CommunicationHistory getPreviousCommunicationMessageHash(String messageHash)
        + void removeCommunicationHistoryByMessageHash(String messageHash)
        + void storeCommunication(String workflowRunId, String userId, String messageHash)
    }

    class DefaultCommunicationHistoryAccessProvider implements CommunicationHistoryAccessProvider {
        - DynamoDbAsyncClient dynamoDbAsyncClient
        - DefaultCommunicationHistoryAccessProviderProperties historyAccessProviderProperties
        + Communication getPreviousCommunicationMessageHash(String messageHash)
        + void storeCommunication(String workflowRunId, String userId, String messageHash)
        + void removeCommunicationHistoryByMessageHash(String messageHash)
    }

    interface GatewayService <TUser, TContent>{
        + ResponseEntity<GatewayResponse> sendCommunication(GatewayProperties<TUser, TContent> gatewayProperties)
    }

    class GatewayResponse {
        - String userId
        - String messageHash
        - String errorMessage
        + Standard Getters and Setters()
    }

    class CommunicationGatewayService<TUser, TContent extends Content> implements GatewayService {
        + ResponseEntity sendCommunication(GatewayProperties<TUser, TContent> gatewayProperties))
    }


    CommunicationGatewayService --> DefaultCommunicationHistoryAccessProvider: uses
    CommunicationGatewayService --> HashHelper: uses
    CommunicationGatewayService --> GatewayResponse: returns
}


@enduml
