@startuml Gateway Interfaces

component Worker {
}

interface SendMessageToGateway {
    + Map<String, String> invokeGateway(String userId, String workflowRunId, String gatewayUrl)
}

package "Communication Gateway" as communicationGateway {
    component gateway {

    }


    class GatewayHelper {
        + String messageHash(String workflowRunId, String messageContents)
    }



    interface GatewayController {
        + ResponseEntity sendCommunication(userId, workflowRunId)
    }

    class EmailGatewayController implements GatewayController {
        + ResponseEntity sendCommunication(userId, workflowRunId)
    }

    class GatewayProperties {
        - String userId
        - String workflowRunId
        - ContentDeliveryService contentDeliveryService
        - UserContentService<?, ?> userContentService
        - CommunicationHistoryAccessProvider communicationHistoryAccessProvider
        + Standard Getters() & Setters()
    }

    interface GatewayService {
        + ResponseEntity sendCommunication(GatewayProperties gatewayProperties)
    }

    class CommunicationGatewayService implements GatewayService{
        + ResponseEntity sendCommunication(GatewayProperties gatewayProperties))
    }
    note right of CommunicationGatewayService
        GatewayProperties object can be created by a
        builder and passed to this method.
    end note

    CommunicationGatewayService --> GatewayHelper: uses
    EmailGatewayController --> CommunicationGatewayService: uses
    EmailGatewayController -> GatewayProperties: uses
    Worker --|> SendMessageToGateway
    SendMessageToGateway --> GatewayController: uses
}


@enduml