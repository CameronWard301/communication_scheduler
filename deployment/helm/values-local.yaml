# Default values for helm.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1
useAwsKubernetesSecret: true # Set to true for local kubernetes testing, false for EKS - this is managed through IAM roles.
image:
  pullPolicy: Always

temporal:
  cassandra:
    enabled: true
    config:
      cluster_size: 1

  mysql:
    enabled: false

  postgresql:
    enabled: false


  prometheus:
    enabled: true
    nodeExporter:
      enabled: true

  grafana:
    image:
      tag: 10.4.1
    enabled: false

  elasticsearch:
    persistence:
      enabled: true
    enabled: true
    replicas: 1

  schema:
    setup:
      enabled: true
    update:
      enabled: true

grafana:
  enabled: true
  replicas: 1
  testFramework:
    enabled: false
  rbac:
    create: false
    pspEnabled: false
    namespaced: true
  persistence:
    type: pvc
    enabled: true
    size: 500Mi
  env:
    GF_SERVER_ROOT_URL: "%(protocol)s://%(domain)s:%(http_port)s/grafana/"
    GF_SERVER_SERVE_FROM_SUB_PATH: true
    GF_SECURITY_ALLOW_EMBEDDING: true
    GF_AUTH_ANONYMOUS_ENABLED: true
  dashboardProviders:
    dashboardproviders.yaml:
      apiVersion: 1
      providers:
        - name: "default"
          orgId: 1
          folder: ""
          type: file
          disableDeletion: false
          editable: true
          options:
            path: /var/lib/grafana/dashboards/default
        - name: "custom"
          orgId: 1
          folder: "custom"
          type: file
          disableDeletion: false
          editable: true
          options:
            path: /var/lib/grafana/dashboards/default/custom
  datasources:
    datasources.yaml:
      apiVersion: 1
      datasources:
        - name: TemporalMetrics
          type: prometheus
          url: http://{{ .Release.Name }}-prometheus-server
          access: proxy
          isDefault: true
  dashboards:
    default:
      server-general-github:
        url: https://raw.githubusercontent.com/temporalio/dashboards/helm/server/server-general.json
        datasource: TemporalMetrics
      sdk-general-github:
        url: https://raw.githubusercontent.com/temporalio/dashboards/helm/sdk/sdk-general.json
        datasource: TemporalMetrics
      misc-advanced-visibility-specific-github:
        url: https://raw.githubusercontent.com/temporalio/dashboards/helm/misc/advanced-visibility-specific.json
        datasource: TemporalMetrics
      misc-clustermonitoring-kubernetes-github:
        url: https://raw.githubusercontent.com/temporalio/dashboards/helm/misc/clustermonitoring-kubernetes.json
        datasource: TemporalMetrics
      misc-frontend-service-specific-github:
        url: https://raw.githubusercontent.com/temporalio/dashboards/helm/misc/frontend-service-specific.json
        datasource: TemporalMetrics
      misc-history-service-specific-github:
        url: https://raw.githubusercontent.com/temporalio/dashboards/helm/misc/history-service-specific.json
        datasource: TemporalMetrics
      misc-matching-service-specific-github:
        url: https://raw.githubusercontent.com/temporalio/dashboards/helm/misc/matching-service-specific.json
        datasource: TemporalMetrics
      misc-worker-service-specific-github:
        url: https://raw.githubusercontent.com/temporalio/dashboards/helm/misc/worker-service-specific.json
        datasource: TemporalMetrics
      custom-grafana-dashboard:
        url: https://raw.githubusercontent.com/CameronWard301/temporal-custom-grafana-dashboard/main/custom-grafana-dashboard.json
        datasource: TemporalMetrics

communication_worker:
  repository: cameronward/communication-worker
  tag: latest
  logging: debug
  rootLogging: info
  sslVerification: false
  temporal:
    taskQueue: communication-workflow
    namespace: default

email_gateway:
  repository: cameronward/email-gateway
  tag: latest
  region: eu-west-1
  loggingLevel: DEBUG
  rootLoggingLevel: DEBUG
  profile: ssl
  keyStorePath: /certs/email-gateway.p12
  corsEnabled: false
  csrfEnabled: false

sms_gateway:
  repository: cameronward/sms-gateway
  twilioPollingInterval: 5
  maximumPollingAttempts: 10
  tag: latest
  region: eu-west-1
  profile: ssl
  keyStorePath: /certs/sms-gateway.p12
  loggingLevel: DEBUG
  corsEnabled: false
  csrfEnabled: false

mock_gateway:
  repository: cameronward/mock-gateway
  tag: latest
  rootLoggingLevel: info
  loggingLevel: info
  region: eu-west-1
  corsEnabled: false
  csrfEnabled: false

gateway_api:
  repository: cameronward/gateway-api
  tag: latest
  region: eu-west-1
  loggingLevel: info
  keyStorePath: /certs/gateway-api.p12
  verifyHostnames: false
  profile: ssl

preferences_api:
  repository: cameronward/preferences-api
  tag: latest
  region: eu-west-1
  loggingLevel: DEBUG
  profile: ssl
  verifyHostnames: false
  clusterNamespace: default
  keyStorePath: /certs/preferences-api.p12

auth_api:
  keyId: "communication-auth-api"
  repository: cameronward/auth-api
  tokenExpiration: 86400
  tag: latest
  region: eu-west-1
  loggingLevel: INFO
  profile: ssl
  keyStorePath: /certs/auth-api.p12

data_converter_api:
  repository: cameronward/data-converter-api
  tag: latest
  loggingLevel: INFO

schedule_api:
  repository: cameronward/schedule-api
  tag: latest
  loggingLevel: info
  keyStorePath: /certs/schedule-api.p12
  profile: ssl
  temporalNamespace: default
  verifyHostnames: false

history_api:
  repository: cameronward/history-api
  tag: latest
  loggingLevel: info
  keyStorePath: /certs/history-api.p12
  profile: ssl
  temporalNamespace: default
  verifyHostnames: false

web_bff:
  repository: cameronward/cs-web-portal-bff
  tag: latest
  port: "3000"
  sslVerification: "false"
  limitPeriodSeconds: "120"
  limitNumberRequests: "1000"

web_portal:
  repository: cameronward/cs-web-portal
  tag: latest
  port: "3000"
  verifyHttps: "false"
  bffUri: "/v1/bff"
  environment: "dev"

integration_tests:
  repository: cameronward/cs-integration-tests
  tag: latest
  temporalNamespace: default
  kubernetesNamespace: default
  filterExpression: "@EmailGateway or @GatewayAPI or @PreferencesAPI or @InvalidGateway or @DataConverterAPI or @MockGateway or @ScheduleAPI or @HistoryAPI or @WebPortal"
  #filterExpression: "@WebPortal"
  selenium:
    implicitWait: 5
    explicitWait: 10

PreferencesDefaults:
  GatewayTimeoutSeconds: "60"
  RetryPolicy: >-
    { "maximumAttempts": "100", "backoffCoefficient": 2, "initialInterval":
    "PT1S", "maximumInterval": "PT100S", "startToCloseTimeout": "PT10S" }
